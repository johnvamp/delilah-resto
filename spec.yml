swagger: "2.0"
info:
  description: "Este documento contiene las especificaciones para acceder y usar la API de Delilah restó."
  version: "1.0.0"
  title: "Delilah Restó"
  termsOfService: "http://delilahresto.com/terms/"
  contact:
    email: "apiteam@delilahresto.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/api"
tags:
  - name: "productos"
    description: "Contiene los productos disponibles de restaurante"
  - name: "pedidos"
    description: "Accede a los pedidos del restaurante"
  - name: "usuarios"
    description: "Operaciones con usuarios"
schemes:
  - "https"
  - "http"
paths:
  /productos:
    get:
      tags:
        - "productos"
      summary: "Retorna el inventario de productos"
      description: "Retorna todos los productos almacenados en el restaurante"
      operationId: "getInventory"
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/producto_guardado"

    post:
      tags:
        - "productos"
      summary: "Adicionar un nuevo producto al restaurante"
      operationId: "addProduct"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "Authentication Token"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "El objeto del producto que debe ser agregar a la tienda"
          required: true
          schema:
            $ref: "#/definitions/producto_subido"
      responses:
        201:
          description: "Created"
          schema:
            type: "object"
            properties:
              idProducto:
                type: "number"
        400:
          description: "Missing Arguments"
        401:
          description: "Token has expired. Please login again"
        403:
          description: "Forbidden"
      security:
        - store_auth:
            - "write:productos"

  /productos/{idProducto}:
    put:
      tags:
        - "productos"
      summary: "Actualiza un producto existente"
      description: ""
      operationId: "actualizarProducto"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "idProducto"
          in: "path"
          description: "ID del producto a actualizar"
          required: true
          type: "integer"
          format: "int64"
        - in: "header"
          name: "authorization"
          description: "Authentication Token"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Propiedades del producto que debe ser actualizado en el restaurante"
          required: true
          schema:
            $ref: "#/definitions/producto_subido"
      responses:
        202:
          description: "Acepted"
          schema:
            $ref: "#/definitions/producto_guardado"
        401:
          description: "Token has expired. Please login again"
        403:
          description: "Forbidden"
        404:
          description: "Product not found"
      security:
        - store_auth:
            - "write:productos"

    delete:
      tags:
        - "productos"
      summary: "Borra un producto"
      description: ""
      operationId: "borrarProducto"
      produces:
        - "application/json"
      parameters:
        - name: "idProducto"
          in: "path"
          description: "Id del producto a borrar"
          required: true
          type: "integer"
          format: "int64"
        - in: "header"
          name: "authorization"
          description: "Authentication Token"
          required: true
          type: "string"
      responses:
        200:
          description: "Deleted"
        401:
          description: "Token has expired. Please login again"
        403:
          description: "Forbidden"
        404:
          description: "Product not found"
        409:
          description: "Product linked to an active order. Please resolve conflict and try again"
      security:
        - store_auth:
            - "write:productos"

  /pedidos:
    get:
      tags:
        - "pedidos"
      summary: "Returna el invetario de pedidos"
      description: "Retorna todos los pedidos existentes en el restaurante"
      operationId: "getpedidos"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "Authentication Token"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/pedido_completado"
      security:
        - store_auth:
            - "write:pedidos"

    post:
      tags:
        - "pedidos"
      summary: "Adadiciona un nuevo pedido al restaurante"
      description: ""
      operationId: "addPedido"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Objeto del pedido que debe ser agregado al restaurante"
          required: true
          schema:
            $ref: "#/definitions/pedido_enviado"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/pedido_completado"
        400:
          description: "usuario not found"
        405:
          description: "Missing Arguments"

  /pedidos/{idPedido}:
    put:
      tags:
        - "pedidos"
      summary: "Actualiza el estado de un pedido existente"
      description: ""
      operationId: "actualizarEstadoPedido"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "idPedido"
          description: "Id del pedido a actualizar"
          required: true
          type: "integer"
          format: "int64"
        - in: "header"
          name: "authorization"
          description: "Authentication Token"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Estado del pedido que debe ser actualizado en el restaurante"
          required: true
          schema:
            $ref: "#/definitions/pedido_actualizarEstado"
      responses:
        202:
          description: "Acepted"
          schema:
            $ref: "#/definitions/pedido_actualizado"
        401:
          description: "Token has expired. Please login again"
        403:
          description: "Forbidden"
        404:
          description: "Order not found"
        405:
          description: "Invalid status suplied"
      security:
        - store_auth:
            - "write:pedidos"

    delete:
      tags:
        - "pedidos"
      summary: "Borra un pedido"
      description: ""
      operationId: "borrarPedido"
      produces:
        - "application/json"
      parameters:
        - name: "idPedido"
          in: "path"
          description: "Id del pedido a borrar"
          required: true
          type: "integer"
          format: "int64"
        - in: "header"
          name: "authorization"
          description: "Authentication Token"
          required: true
          type: "string"
      responses:
        200:
          description: "Deleted"
        401:
          description: "Token has expired. Please login again"
        403:
          description: "Forbidden"
        404:
          description: "Order not found"
      security:
        - store_auth:
            - "write:productos"

  /usuarios:
    get:
      tags:
        - "usuarios"
      summary: "Retorna una lista de usuarios"
      description: "Retorna todos los usuarios registrados en el restaurante"
      operationId: "getUsuarios"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "Authentication Token"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/usuario_registrado"
      security:
        - store_auth:
            - "write:usuarios"

    post:
      tags:
        - "usuarios"
      summary: "Crear usuario"
      description: "Crea un nuevo usuario en el restaurante."
      operationId: "createUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Objeto usuario creado"
          required: true
          schema:
            $ref: "#/definitions/registrar_usuario"
      responses:
        201:
          description: "usuario creado"
          schema:
            $ref: "#/definitions/id_usuario"
        400:
          description: "Missing Arguments"
        409:
          description: "Username already in use / usuario already exists"

  /usuarios/login:
    post:
      tags:
        - "usuarios"
      summary: "Login de usuario en el restaurante"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/json"
      parameters:
        - name: "credentials"
          in: "body"
          description: "El nombre de usuario y contraseña del usuario para el login"
          required: true
          schema:
            type: "object"
            properties:
              nombre_usuario:
                type: "string"
              contrasena_usuario:
                type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          headers:
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid Username / Wrong password supplied"

securityDefinitions:
  store_auth:
    type: "oauth2"
    authorizationUrl: "localhost/api/usuarios/login"
    flow: "implicit"
    scopes:
      write:productos: "crea, modificao y borra productos en el restaurante"
      write:pedidos: "modifica el estado del pedido en el restaurante"
      write:usuarios: "lista los usuarios registrados"

definitions:
  pedido_enviado:
    type: "object"
    properties:
      nombre_usuario:
        type: "string"
      productos:
        type: "array"
        items:
          $ref: "#/definitions/item_seleccionado"
      metodo_pago:
        type: "string"
        description: "método de pago elegido por el usuario"
        enum:
          - "efectivo"
          - "credito"

  pedido_completado:
    type: "object"
    properties:
      id_pedido:
        type: "number"
      estado_pedido:
        type: "string"
        enum:
          - "nueva"
          - "confirmada"
          - "preparando"
          - "entregando"
          - "entregada"
      tiempo_pedido:
        type: "string"
        example: "17:39:20"
      descripcion_pedido:
        type: "string"
        example: "1xDoubleBurg 2xFrenchFr"
      cantidad_pedido:
        type: "number"
      metodo_pago:
        type: "string"
        description: "método de pago elegido por el usuario"
        enum:
          - "efectovo"
          - "credito"
      id_usuario:
        type: "number"
      nombre_usuario:
        type: "string"
      nombre:
        type: "string"
      apellido:
        type: "string"
      direccion:
        type: "string"
      email:
        type: "string"
      telefono:
        type: "string"
      productos:
        type: "array"
        items:
          type: "object"
          properties:
            cantidad_producto:
              type: "number"
            nombre_producto:
              type: "string"
              example: "Double Burger"
            precio_producto:
              type: "number"
            foto_producto:
              type: "array"
              items:
                type: "string"

  pedido_actualizado:
    type: "object"
    properties:
      id_pedido:
        type: "number"
      estado_pedido:
        type: "string"
        enum:
          - "nueva"
          - "confirmada"
          - "preparando"
          - "entregando"
          - "entregada"
      tiempo_pedido:
        type: "string"
        example: "17:39:20"
      descripcion_pedido:
        type: "string"
        example: "1xDoubleBurg 2xFrenchFr"
      cantidad_pedido:
        type: "number"
      metodo_pago:
        type: "string"
        description: "Metodo de pago elegido por el usuario"
        enum:
          - "efectivo"
          - "credito"
      id_usuario:
        type: "number"

  item_seleccionado:
    type: "object"
    properties:
      idProducto:
        type: "number"
      quantity:
        type: "number"

  registrar_usuario:
    type: "object"
    properties:
      nombre_usuario:
        type: "string"
      nombre:
        type: "string"
      apellido:
        type: "string"
      contrasena_usuario:
        type: "string"
      email:
        type: "string"
      direccion:
        type: "string"
      telefono:
        type: "string"
      es_admin:
        type: "integer"
        minimum: 0
        maximum: 1

  usuario_registrado:
    type: "object"
    properties:
      id_usuario:
        type: "number"
      nombre_usuario:
        type: "string"
      nombre:
        type: "string"
      apellido:
        type: "string"
      contrasena_usuario:
        type: "string"
      email:
        type: "string"
      direccion:
        type: "string"
      telefono:
        type: "string"
      es_admin:
        type: "integer"
        minimum: 0
        maximum: 1

  id_usuario:
    type: "object"
    properties:
      userId:
        type: "number"

  pedido_actualizarEstado:
    type: "object"
    properties:
      Estado:
        type: "string"
        description: "Estado del pedido en el restaurante"
        enum:
          - "nueva"
          - "confirmada"
          - "preparando"
          - "entregando"
          - "entregada"

  producto_guardado:
    type: "object"
    required:
      - "nombre"
      - "UrlFoto"
      - "precio"
    properties:
      id_producto:
        type: "integer"
        format: "int64"
      nombre_producto:
        type: "string"
        example: "Double-burger"
      precio_producto:
        type: "number"
      foto_producto:
        type: "array"
        items:
          type: "string"

  producto_subido:
    type: "object"
    required:
      - "nombre_producto"
      - "foto_producto"
      - "precio_producto"
    properties:
      nombre_producto:
        type: "string"
        example: "Double-burger"
      foto_producto:
        type: "array"
        items:
          type: "string"
      precio_producto:
        type: "number"
